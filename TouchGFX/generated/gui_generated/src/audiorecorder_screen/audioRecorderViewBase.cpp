/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/audiorecorder_screen/audioRecorderViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

audioRecorderViewBase::audioRecorderViewBase() :
    buttonCallback(this, &audioRecorderViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_BACKGROUNDS_480X272_WAVES_ID));
    add(image1);

    startRecordButton.setXY(30, 20);
    startRecordButton.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PLAY_ARROW_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    startRecordButton.setIconXY(42, 35);
    startRecordButton.setAction(buttonCallback);
    add(startRecordButton);

    stopRecordButton.setXY(158, 20);
    stopRecordButton.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_STOP_CIRCLE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    stopRecordButton.setIconXY(41, 33);
    stopRecordButton.setAction(buttonCallback);
    add(stopRecordButton);

    saveButton.setXY(94, 128);
    saveButton.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_SAVE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    saveButton.setIconXY(43, 33);
    saveButton.setAction(buttonCallback);
    add(saveButton);

    image2.setXY(274, 39);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MEDIUM_FILL_NORMAL_ID));
    add(image2);

    textArea1.setXY(323, 149);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(119, 168, 212));
    textArea1.setLinespacing(0);
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_TESTTEXT).getText());
    textArea1.setWildcard(textArea1Buffer);
    textArea1.resizeToCurrentText();
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N3C9));
    add(textArea1);

    textArea2.setXY(337, 93);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(71, 101, 122));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VC3R));
    add(textArea2);
}

audioRecorderViewBase::~audioRecorderViewBase()
{

}

void audioRecorderViewBase::setupScreen()
{

}

void audioRecorderViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &startRecordButton)
    {
        //startRecordInter
        //When startRecordButton clicked call virtual function
        //Call startRecord
        startRecord();
    }
    if (&src == &stopRecordButton)
    {
        //stopRecordInter
        //When stopRecordButton clicked call virtual function
        //Call stopRecord
        stopRecord();
    }
    if (&src == &saveButton)
    {
        //startSavingInter
        //When saveButton clicked call virtual function
        //Call startSaving
        startSaving();
    }
}
