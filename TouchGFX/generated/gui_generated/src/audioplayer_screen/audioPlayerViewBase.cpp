/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/audioplayer_screen/audioPlayerViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

audioPlayerViewBase::audioPlayerViewBase() :
    sliderValueChangedCallback(this, &audioPlayerViewBase::sliderValueChangedCallbackHandler),
    buttonCallback(this, &audioPlayerViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_BACKGROUNDS_480X272_BURLY_ID));
    add(image1);

    image2.setXY(108, -13);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_NORMAL_ID));
    add(image2);

    VolumeSlider.setXY(424, 10);
    VolumeSlider.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_SLIDER_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_SLIDER_LIGHT_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_ROUNDED_DARK_ID));
    VolumeSlider.setupVerticalSlider(22, 24, 0, 0, 179);
    VolumeSlider.setValueRange(0, 100);
    VolumeSlider.setValue(88);
    VolumeSlider.setNewValueCallback(sliderValueChangedCallback);
    add(VolumeSlider);

    volumeText.setXY(415, 238);
    volumeText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    volumeText.setLinespacing(0);
    Unicode::snprintf(volumeTextBuffer, VOLUMETEXT_SIZE, "%s", touchgfx::TypedText(T_VOLUMEVALUE).getText());
    volumeText.setWildcard(volumeTextBuffer);
    volumeText.resizeToCurrentText();
    volumeText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MD5H));
    add(volumeText);

    titleText.setXY(173, 10);
    titleText.setColor(touchgfx::Color::getColorFromRGB(71, 101, 122));
    titleText.setLinespacing(0);
    titleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RJSE));
    add(titleText);

    fileSizeText.setXY(59, 105);
    fileSizeText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    fileSizeText.setLinespacing(0);
    Unicode::snprintf(fileSizeTextBuffer, FILESIZETEXT_SIZE, "%s", touchgfx::TypedText(T_FILESIZECARD).getText());
    fileSizeText.setWildcard(fileSizeTextBuffer);
    fileSizeText.resizeToCurrentText();
    fileSizeText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z5TA));
    add(fileSizeText);

    sampleRateText.setXY(183, 105);
    sampleRateText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    sampleRateText.setLinespacing(0);
    Unicode::snprintf(sampleRateTextBuffer, SAMPLERATETEXT_SIZE, "%s", touchgfx::TypedText(T_SAMPLERATECARD).getText());
    sampleRateText.setWildcard(sampleRateTextBuffer);
    sampleRateText.resizeToCurrentText();
    sampleRateText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IV1Y));
    add(sampleRateText);

    errorText.setXY(59, 42);
    errorText.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    errorText.setLinespacing(0);
    Unicode::snprintf(errorTextBuffer, ERRORTEXT_SIZE, "%s", touchgfx::TypedText(T_ERRORTEXTCARD).getText());
    errorText.setWildcard(errorTextBuffer);
    errorText.resizeToCurrentText();
    errorText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JRN6));
    add(errorText);

    fileSelectButton.setXY(33, 45);
    fileSelectButton.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUNDED_PRESSED_ID));
    fileSelectButton.setAction(buttonCallback);
    add(fileSelectButton);

    nowFileText.setXY(63, 71);
    nowFileText.setColor(touchgfx::Color::getColorFromRGB(116, 194, 219));
    nowFileText.setLinespacing(0);
    Unicode::snprintf(nowFileTextBuffer, NOWFILETEXT_SIZE, "%s", touchgfx::TypedText(T_FILENAME).getText());
    nowFileText.setWildcard(nowFileTextBuffer);
    nowFileText.resizeToCurrentText();
    nowFileText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FW2C));
    add(nowFileText);

    playButton.setXY(33, 112);
    playButton.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    playButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_RAE4));
    playButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    playButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(155, 204, 224));
    playButton.setAction(buttonCallback);
    add(playButton);

    pauseButton.setXY(152, 112);
    pauseButton.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    pauseButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_XNVG));
    pauseButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    pauseButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(155, 204, 224));
    pauseButton.setAction(buttonCallback);
    add(pauseButton);

    stopButton.setXY(271, 45);
    stopButton.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    stopButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_VPHE));
    stopButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    stopButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(155, 204, 224));
    stopButton.setAction(buttonCallback);
    add(stopButton);

    muteButton.setXY(270, 112);
    muteButton.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    muteButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_25RI));
    muteButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    muteButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(155, 204, 224));
    muteButton.setAction(buttonCallback);
    add(muteButton);

    waveFileList.setPosition(59, 105, 212, 145);
    waveFileList.enableHorizontalScroll(false);
    waveFileList.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    waveFileList.setScrollbarsAlpha(255);
    fileList.setPosition(0, 0, 250, 250);
    fileList.setDirection(touchgfx::SOUTH);
    waveFileList.add(fileList);

    add(waveFileList);
}

audioPlayerViewBase::~audioPlayerViewBase()
{

}

void audioPlayerViewBase::setupScreen()
{

}

void audioPlayerViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &VolumeSlider)
    {
        //volumeValueChanged
        //When VolumeSlider value changed call virtual function
        //Call volumeChanged
        volumeChanged(value);
    }
}

void audioPlayerViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &muteButton)
    {
        //muteInter
        //When muteButton clicked call virtual function
        //Call muteFunction
        muteFunction();
    }
    if (&src == &fileSelectButton)
    {
        //displayFileListInter
        //When fileSelectButton clicked call virtual function
        //Call disFileList
        disFileList();
    }
    if (&src == &playButton)
    {
        //playInter
        //When playButton clicked call virtual function
        //Call playFunction
        playFunction();
    }
    if (&src == &pauseButton)
    {
        //pauseInter
        //When pauseButton clicked call virtual function
        //Call pauseFunction
        pauseFunction();
    }
    if (&src == &stopButton)
    {
        //stopInter
        //When stopButton clicked call virtual function
        //Call stopFunction
        stopFunction();
    }
}
